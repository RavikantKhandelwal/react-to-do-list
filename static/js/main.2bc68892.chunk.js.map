{"version":3,"sources":["logo.svg","components/Forms.js","components/ToDoElement.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Forms","inputText","setInputText","setInputTodo","inputTodo","tempTodo","setTempTodo","onChange","e","target","value","type","className","onClick","preventDefault","newTodo","item","completed","fall","key","Math","random","name","filter","td","ToDoElement","map","todo","listId","returnnewTodo","toggleCompleted","returnTodo","deleteItem","ToDoList","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bc68892.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nconst Forms = ({\r\n  inputText,\r\n  setInputText,\r\n  inputTodo,\r\n  setInputTodo,\r\n  tempTodo,\r\n  setTempTodo,\r\n}) => {\r\n  const changeText = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const addItem = (e) => {\r\n    e.preventDefault();\r\n    const newTodo = [\r\n      ...tempTodo,\r\n      { item: inputText, completed: false, fall: false, key: Math.random() },\r\n    ];\r\n    setInputTodo(newTodo);\r\n    setTempTodo(newTodo);\r\n    // this will ensure that even if we filter, our complete todo liust will be there in temp todo\r\n  };\r\n  const changedFilter = (e) => {\r\n    //this will set the initial value in temp todo\r\n    //   settempTodo(inputTodo);\r\n    if (e.target.value === \"all\") {\r\n      setInputTodo(tempTodo);\r\n    }\r\n    if (e.target.value === \"completed\") {\r\n      setInputTodo(tempTodo.filter((td) => td.completed));\r\n    }\r\n    if (e.target.value === \"uncompleted\") {\r\n      setInputTodo(tempTodo.filter((td) => !td.completed));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input onChange={changeText} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={addItem} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select name=\"todos\" className=\"filter-todo\" onChange={changedFilter}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","import React from \"react\";\r\n\r\nfunction ToDoElement({ inputTodo, setInputTodo, tempTodo, setTempTodo }) {\r\n  const toggleCompleted = (listId) => {\r\n    const returnnewTodo = tempTodo.map((todo) => {\r\n      if (listId === todo.key) {\r\n        return { ...todo, completed: !todo.completed };\r\n      } else {\r\n        return todo;\r\n      }\r\n    });\r\n    setInputTodo(returnnewTodo);\r\n    setTempTodo(returnnewTodo);\r\n  };\r\n\r\n  const deleteItem = (listId) => {\r\n    const returnTodo = tempTodo\r\n      .map((todo) => {\r\n        if (listId === todo.key) {\r\n          return { ...todo, fall: !todo.fall };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n      .filter((todo) => todo.key !== listId);\r\n    setInputTodo(returnTodo);\r\n    setTempTodo(returnTodo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {inputTodo.map((todo) => {\r\n        return (\r\n          <div\r\n            className={`todo ${todo.completed ? \"completed\" : \"\"} ${\r\n              todo.fall ? \"fall\" : \"\"\r\n            }`}\r\n            key={todo.key}\r\n          >\r\n            <li className=\"todo-item\">{todo.item}</li>\r\n            <button\r\n              className=\"complete-btn\"\r\n              onClick={() => toggleCompleted(todo.key)}\r\n            >\r\n              <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button className=\"trash-btn\" onClick={() => deleteItem(todo.key)}>\r\n              <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDoElement;\r\n","import React from \"react\";\r\nimport ToDoElement from \"./ToDoElement\";\r\n\r\nconst ToDoList = ({\r\n  inputText,\r\n  setInputText,\r\n  inputTodo,\r\n  setInputTodo,\r\n  tempTodo,\r\n  setTempTodo,\r\n}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        <ToDoElement\r\n          inputTodo={inputTodo}\r\n          setInputTodo={setInputTodo}\r\n          tempTodo={tempTodo}\r\n          setTempTodo={setTempTodo}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Forms from \"./components/Forms\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [inputTodo, setInputTodo] = useState([]);\n  const [tempTodo, setTempTodo] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <header>Ravikant's To Do list</header>\n      <Forms\n        inputTodo={inputTodo}\n        setInputTodo={setInputTodo}\n        inputText={inputText}\n        setInputText={setInputText}\n        tempTodo={tempTodo}\n        setTempTodo={setTempTodo}\n      />\n      <ToDoList\n        inputTodo={inputTodo}\n        setInputTodo={setInputTodo}\n        inputText={inputText}\n        setInputText={setInputText}\n        tempTodo={tempTodo}\n        setTempTodo={setTempTodo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}